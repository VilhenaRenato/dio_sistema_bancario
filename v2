import textwrap

def menu():
    menu="""\n
    ==============MENU===============
    [d]\tDepositar
    [s]\tSacar
    [e]\tExtrato
    [nu]\tNovo Usuário
    [nc]\tNova Conta
    [lc]\tListar Contas
    [q]\tSair
    => """
    return input(textwrap.dedent(menu))

def depositar(saldo,deposito,extrato,/):
    if deposito>0:
        saldo+=deposito
        extrato+=f"Depósito + R$\t {deposito:.2f}\n"
        print(f"Depósito de R$ {deposito:.2f} realizado com sucesso!")
    else:
        print("Operação inválida, o valor não pode ser menor que R$ 0.01, voltando ao menu principal!")
    return saldo,extrato

def exibir_extrato(saldo,/,*,extrato):
    print("\n===========Extrato===========")
    print("Não foram realizadas movimentações." if not extrato else extrato)
    print(f"\nSaldo = R$ {saldo:.2f}")
    print("==============================")

def sacar(*,saldo,saque,extrato,limite,numero_saques,limite_saques):
    if saldo <=0:
        print("Saldo Insuficiente! Voltando ao menu principal!")
    else:
        if numero_saques >= limite_saques:
            print("Limite de saques diários atingindo, favor tente novamente amanhã!")
        else:
            if saque<=0 or saque > limite:
                print("Operação inválida, o valor não pode ser menor que R$ 0.01 e nem maior que R$ 500.00, voltando ao menu principal!")
            else:
                if saldo<saque:
                    print("Saldo Insuficiente! Voltando ao menu principal!")
                else:
                    saldo-=saque
                    extrato+="Saque    - R$\t "+(f'{saque:.2f}\n')
                    numero_saques+=1
                    print(f"Saque de R$ {saque:.2f} realizado com sucesso!")
    return saldo, extrato,numero_saques

def criar_usuario(usuarios):
    cpf = input("Informe o CPF (somente número): ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\nJá existe usuário com esse CPF! Voltando ao menu principal!")
        return

    nome = input("Informe o nome completo: ")
    data_nascimento = input("Informe a data de nascimento (dd-mm-aaaa): ")
    endereco = input("Informe o endereço (logradouro, n° - bairro - cidade/sigla estado): ")

    usuarios.append({"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereco": endereco})

    print("Usuário criado com sucesso!")

def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF do usuário: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\nConta criada com sucesso!")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}

    print("\nUsuário não encontrado, operação encerrada, voltando ao menu principal!")

def listar_contas(contas):
    for conta in contas:
        linha = f"""\
            Agência:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta']}
            Titular:\t{conta['usuario']['nome']}
        """
        print("=" * 100)
        print(textwrap.dedent(linha))

def filtrar_usuario(cpf,usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None

def main():
    saldo=0
    limite= 500
    extrato=""
    numero_saques = 0
    usuarios=[]
    contas=[]
    LIMITE_SAQUES = 3
    AGENCIA="0001"

    while True:

        opcao = menu()

        if opcao == "d":
            print("Deposito")
            deposito=float(input("Digite o valor do depósito: "))
            saldo, extrato = depositar(saldo, deposito, extrato)


        elif opcao == "s":
            print("Saque")
            saque=float(input("Digite o valor do Saque: "))
            saldo,extrato,numero_saques=sacar(saldo=saldo,saque=saque,extrato=extrato,limite=limite,numero_saques=numero_saques,limite_saques=LIMITE_SAQUES)
            

        elif opcao == "e":
            exibir_extrato(saldo,extrato=extrato)

        elif opcao == "nu":
            criar_usuario(usuarios)

        elif opcao == "nc":
            numero_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_conta, usuarios)
            if conta:
                contas.append(conta)
        elif opcao == "lc":
            listar_contas(contas)
        elif opcao == "q":
            print("\n"+"Obrigado por usar nosso sistema bancário"+"\n")
            break

        else:
            print("Operação inválida, por favor selecione novamente a operação desejada.")

main()
